<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <%- include('./partials/head.ejs'); %>
    <!-- 
      <link rel="stylesheet" href="/stylesheets/style.css">
    -->
    
  </head>
  <body>
    <!--Navbar-->
    <%- include('./partials/navbar.ejs'); %>
    <div class="container mx-auto">
      <div class="py-2 flex flex-col justify-center">
        <!-- Formulaire d'annonce -->
        <form
          class="bg-white max-w-[700px] w-full mx-auto p-20 px-6 rounded-3xl border-gray-100"
          action="/annonces/update/<%- data._id -%>"
          method="POST"
          enctype="multipart/form-data"
        >
          <h2 class="text-4xl text-black font-bold text-center">
            Edit your listing
          </h2>

          <!-- Titre -->
          <div class="flex flex-col mt-8 text-black py-2">
            <label for="titre">Title:</label>
            <input
              placeholder="Enter the title"
              class="rounded-xl border-2 border-gray-100 mt-2 p-2 bg-transparent"
              type="text"
              name="titre"
              id="titre"
              value="<%= data.titre %>"
              required
            />
          </div>

          <!--Type 2 cols -->
          <div class="grid grid-cols-2 gap-5">
            <!-- Type (Vente/Location) -->
            <div class="flex flex-col mt-4 text-black py-2">
              <label for="type">Type:</label>
              <select
                class="rounded-xl border-2 border-gray-100 mt-2 p-2 bg-transparent"
                name="type"
                id="type"
                required
              >
                <option value="Vente" <%= data.type === 'Vente' ? 'selected' : '' %>>Vente</option>
                <option value="Location" <%= data.type === 'Location' ? 'selected' : '' %>>Location</option>
              </select>
            </div>

            <!-- Statut de publication -->
            <div class="flex flex-col mt-4 text-black py-2">
              <label for="statusPublication">Publication Status:</label>
              <select
                class="rounded-xl border-2 border-gray-100 mt-2 p-2 bg-transparent"
                name="statusPublication"
                id="statusPublication"
                required
              >
                <option value="Publiée" <%= data.statusPublication === 'Publiée' ? 'selected' : '' %>>Publiée</option>
                <option value="Non publiée" <%= data.statusPublication === 'Non publiée' ? 'selected' : '' %>>Non publiée</option>
              </select>
            </div>
          </div>

          <!-- Statut du bien -->
          <div class="flex flex-col mt-4 text-black py-2">
            <label for="statusBien">Property Status:</label>
            <select
              class="rounded-xl border-2 border-gray-100 mt-2 p-2 bg-transparent"
              name="statusBien"
              id="statusBien"
              required
            >
              <option value="disponible" <%= data.statusBien === 'disponible' ? 'selected' : '' %>>Disponible</option>
              <option value="loué" <%= data.statusBien === 'loué' ? 'selected' : '' %>>Loué</option>
              <option value="vendu" <%= data.statusBien === 'vendu' ? 'selected' : '' %>>Vendu</option>
            </select>
          </div>

          <!-- Description -->
          <div class="flex flex-col mt-4 text-black py-2">
            <label
              for="descriptionLongue"
              class="block mb-2 text-sm font-medium text-gray-900"
              >Description</label
            >
            <textarea
              id="descriptionLongue"
              name="descriptionLongue"
              rows="6"
              class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500"
              placeholder="Une déscription détaillée de l'annonce..."
              required
            ><%= data.descriptionLongue %></textarea>
          </div>

          <!-- Prix -->
          <div class="flex flex-col mt-4 text-black py-2">
            <label for="prix">Price:</label>
            <input
              placeholder="Enter the price"
              class="rounded-xl border-2 border-gray-100 mt-2 p-2 bg-transparent"
              type="number"
              name="prix"
              value="<%= data.prix %>"
              id="prix"
              required
            />
          </div>

          <!-- Date de disponibilité -->
          <div class="flex flex-col mt-4 text-black py-2">
            <label for="dateDisponibilite">Availability Date:</label>
            <input
              class="rounded-xl border-2 border-gray-100 mt-2 p-2 bg-transparent"
              type="date"
              name="dateDisponibilite"
              id="dateDisponibilite"
              value="<%= date %>"
              required
            />
          </div>

          <!--Images-->
          <div class="flex flex-col mt-4 ">
            <label for="dateDisponibilite">Images:</label>
            <div x-data="dataFileDnD()" class=" py-2 border border-gray-200 rounded">
            
              <div x-ref="dnd"
                  class="relative flex flex-col text-gray-400 border border-gray-200 border-dashed rounded cursor-pointer">
                  <input accept="image/*" type="file" multiple
                      class="absolute inset-0 z-50 w-full h-full p-0 m-0 outline-none opacity-0 cursor-pointer"
                      @change="addFiles($event)"
                      @dragover="$refs.dnd.classList.add('border-blue-400'); $refs.dnd.classList.add('ring-4'); $refs.dnd.classList.add('ring-inset');"
                      @dragleave="$refs.dnd.classList.remove('border-blue-400'); $refs.dnd.classList.remove('ring-4'); $refs.dnd.classList.remove('ring-inset');"
                      @drop="$refs.dnd.classList.remove('border-blue-400'); $refs.dnd.classList.remove('ring-4'); $refs.dnd.classList.remove('ring-inset');"
                      title=""
                      name="photos" />

                  <div class="flex flex-col items-center justify-center py-10 text-center">
                      <svg class="w-6 h-6 mr-1 text-current-50" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                          stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                      </svg>
                      <p class="m-0">Drag your files here or click in this area.</p>
                  </div>
              </div>
                  <!-- Display selected images -->
                    <div class="flex flex-col mt-4">
                      <label for="images">Selected Images:</label>
                      <div class="flex flex-wrap gap-4 mt-2">
                        <% data.photos.forEach((image, index) => { %>
                          <div class="w-32">
                            <img src="/images/uploads/<%= image %>" alt="Image <%= index + 1 %>" class="w-full h-auto" />
                          </div>
                        <% }); %>
                      </div>
                    </div>
              <template x-if="files.length > 0">
                  <div class="grid grid-cols-2 gap-4 mt-4 md:grid-cols-6" @drop.prevent="drop($event)"
                      @dragover.prevent="$event.dataTransfer.dropEffect = 'move'">
                      
                      <template x-for="(_, index) in Array.from({ length: files.length })">
                          <div class="relative flex flex-col items-center overflow-hidden text-center bg-gray-100 border rounded cursor-move select-none"
                              style="padding-top: 100%;" @dragstart="dragstart($event)" @dragend="fileDragging = null"
                              :class="{'border-blue-600': fileDragging == index}" draggable="true" :data-index="index">
                              <button class="absolute top-0 right-0 z-50 p-1 bg-white rounded-bl focus:outline-none" type="button" @click="remove(index)">
                                  <svg class="w-4 h-4 text-gray-700" xmlns="http://www.w3.org/2000/svg" fill="none"
                                      viewBox="0 0 24 24" stroke="currentColor">
                                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                  </svg>
                              </button>
                              <template x-if="files[index].type.includes('image/')">
                                  <img class="absolute inset-0 z-0 object-cover w-full h-full border-4 border-white preview"
                                      x-bind:src="loadFile(files[index])" />
                              </template>

                              <div class="absolute bottom-0 left-0 right-0 flex flex-col p-2 text-xs bg-white bg-opacity-50">
                                  <span class="w-full font-bold text-gray-900 truncate"
                                      x-text="files[index].name">Loading</span>
                                  <span class="text-xs text-gray-900" x-text="humanFileSize(files[index].size)">...</span>
                              </div>

                              <div class="absolute inset-0 z-40 transition-colors duration-300" @dragenter="dragenter($event)"
                                  @dragleave="fileDropping = null"
                                  :class="{'bg-blue-200 bg-opacity-80': fileDropping == index && fileDragging != index}">
                              </div>
                          </div>
                      </template>
                  </div>
              </template>
            </div>
          </div>
          <!-- Bouton de soumission -->
          <div>
            <button
              class="active:scale-[.98] active:duration-75 transition-all hover:scale-[1.01] ease-in-out w-full text-white rounded-xl my-5 py-2 bg-blue-600"
              type="submit"
            >
              Update
            </button>
          </div>
        </form>
      </div>
    </div>

    <!--scripts-->
    <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>
    <script src="https://unpkg.com/create-file-list"></script>
    <script>
    function dataFileDnD() {
    return {
        files: [],
        fileDragging: null,
        fileDropping: null,
        humanFileSize(size) {
            const i = Math.floor(Math.log(size) / Math.log(1024));
            return (
                (size / Math.pow(1024, i)).toFixed(2) * 1 +
                " " +
                ["B", "kB", "MB", "GB", "TB"][i]
            );
        },
        remove(index) {
            let files = [...this.files];
            files.splice(index, 1);

            this.files = createFileList(files);
        },
        drop(e) {
            let removed, add;
            let files = [...this.files];

            removed = files.splice(this.fileDragging, 1);
            files.splice(this.fileDropping, 0, ...removed);

            this.files = createFileList(files);

            this.fileDropping = null;
            this.fileDragging = null;
        },
        dragenter(e) {
            let targetElem = e.target.closest("[draggable]");

            this.fileDropping = targetElem.getAttribute("data-index");
        },
        dragstart(e) {
            this.fileDragging = e.target
                .closest("[draggable]")
                .getAttribute("data-index");
            e.dataTransfer.effectAllowed = "move";
        },
        loadFile(file) {
            const preview = document.querySelectorAll(".preview");
            const blobUrl = URL.createObjectURL(file);

            preview.forEach(elem => {
                elem.onload = () => {
                    URL.revokeObjectURL(elem.src); // free memory
                };
            });

            return blobUrl;
        },
        addFiles(e) {
            const files = createFileList([...this.files], [...e.target.files]);
            this.files = files;
            this.form.formData.files = [...files];
        }
    };
}
    </script>

    <!--Footer -->
    <%- include('./partials/footer.ejs'); %>
  </body>
</html>


